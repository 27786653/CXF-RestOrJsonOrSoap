package com.yuhi.ws;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * <a href="http://www.webxml.com.cn/" target="_blank">WebXml.com.cn</a> <strong>随机英文、数字和中文简体字 WEB 服务</strong> 可用于验证码[<a href="http://www.webxml.com.cn/ValidateCode/ChineseValidateCode.aspx" target="_blank">演示1</a>] [<a href="http://www.webxml.com.cn/ValidateCode/EnglishValidateCode.aspx" target="_blank">演示2</a>]及其他方面，这里支持最多不超过8个随机中文简体字，10个随机英文、数字输出（一般也够了:P），如需要更多输出请<a href="http://www.webxml.com.cn/zh_cn/contact_us.aspx" target="_blank">联系我们</a>，欢迎技术交流。 QQ：8698053<br /><strong>使用本站 WEB 服务请注明或链接本站：http://www.webxml.com.cn/ 感谢大家的支持</strong>！<br /><br />&nbsp;
 *
 * This class was generated by Apache CXF 3.1.14
 * 2017-11-26T10:53:28.633+08:00
 * Generated source version: 3.1.14
 * 
 */
@WebServiceClient(name = "RandomFontsWebService", 
                  wsdlLocation = "http://www.webxml.com.cn/WebServices/RandomFontsWebService.wsdl",
                  targetNamespace = "http://WebXml.com.cn/") 
public class RandomFontsWebService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://WebXml.com.cn/", "RandomFontsWebService");
    public final static QName RandomFontsWebServiceHttpGet = new QName("http://WebXml.com.cn/", "RandomFontsWebServiceHttpGet");
    public final static QName RandomFontsWebServiceHttpPost = new QName("http://WebXml.com.cn/", "RandomFontsWebServiceHttpPost");
    public final static QName RandomFontsWebServiceSoap = new QName("http://WebXml.com.cn/", "RandomFontsWebServiceSoap");
    public final static QName RandomFontsWebServiceSoap12 = new QName("http://WebXml.com.cn/", "RandomFontsWebServiceSoap12");
    static {
        URL url = null;
        try {
            url = new URL("http://www.webxml.com.cn/WebServices/RandomFontsWebService.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(RandomFontsWebService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "http://www.webxml.com.cn/WebServices/RandomFontsWebService.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public RandomFontsWebService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public RandomFontsWebService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public RandomFontsWebService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public RandomFontsWebService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public RandomFontsWebService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public RandomFontsWebService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns RandomFontsWebServiceHttpGet
     */
    @WebEndpoint(name = "RandomFontsWebServiceHttpGet")
    public RandomFontsWebServiceHttpGet getRandomFontsWebServiceHttpGet() {
        return super.getPort(RandomFontsWebServiceHttpGet, RandomFontsWebServiceHttpGet.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns RandomFontsWebServiceHttpGet
     */
    @WebEndpoint(name = "RandomFontsWebServiceHttpGet")
    public RandomFontsWebServiceHttpGet getRandomFontsWebServiceHttpGet(WebServiceFeature... features) {
        return super.getPort(RandomFontsWebServiceHttpGet, RandomFontsWebServiceHttpGet.class, features);
    }


    /**
     *
     * @return
     *     returns RandomFontsWebServiceHttpPost
     */
    @WebEndpoint(name = "RandomFontsWebServiceHttpPost")
    public RandomFontsWebServiceHttpPost getRandomFontsWebServiceHttpPost() {
        return super.getPort(RandomFontsWebServiceHttpPost, RandomFontsWebServiceHttpPost.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns RandomFontsWebServiceHttpPost
     */
    @WebEndpoint(name = "RandomFontsWebServiceHttpPost")
    public RandomFontsWebServiceHttpPost getRandomFontsWebServiceHttpPost(WebServiceFeature... features) {
        return super.getPort(RandomFontsWebServiceHttpPost, RandomFontsWebServiceHttpPost.class, features);
    }


    /**
     *
     * @return
     *     returns RandomFontsWebServiceSoap
     */
    @WebEndpoint(name = "RandomFontsWebServiceSoap")
    public RandomFontsWebServiceSoap getRandomFontsWebServiceSoap() {
        return super.getPort(RandomFontsWebServiceSoap, RandomFontsWebServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns RandomFontsWebServiceSoap
     */
    @WebEndpoint(name = "RandomFontsWebServiceSoap")
    public RandomFontsWebServiceSoap getRandomFontsWebServiceSoap(WebServiceFeature... features) {
        return super.getPort(RandomFontsWebServiceSoap, RandomFontsWebServiceSoap.class, features);
    }


    /**
     *
     * @return
     *     returns RandomFontsWebServiceSoap
     */
    @WebEndpoint(name = "RandomFontsWebServiceSoap12")
    public RandomFontsWebServiceSoap getRandomFontsWebServiceSoap12() {
        return super.getPort(RandomFontsWebServiceSoap12, RandomFontsWebServiceSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns RandomFontsWebServiceSoap
     */
    @WebEndpoint(name = "RandomFontsWebServiceSoap12")
    public RandomFontsWebServiceSoap getRandomFontsWebServiceSoap12(WebServiceFeature... features) {
        return super.getPort(RandomFontsWebServiceSoap12, RandomFontsWebServiceSoap.class, features);
    }

}
